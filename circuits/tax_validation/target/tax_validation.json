{"noir_version":"1.0.0-beta.6+ef6d8667c524cc07e02bdbd142ab16bee25f1581","hash":"9396161643494259607","abi":{"parameters":[{"name":"total_declared_value","type":{"kind":"integer","sign":"unsigned","width":64},"visibility":"private"},{"name":"amount_paid","type":{"kind":"integer","sign":"unsigned","width":64},"visibility":"private"},{"name":"tax_percentage","type":{"kind":"integer","sign":"unsigned","width":64},"visibility":"public"}],"return_type":null,"error_types":{"7233212735005103307":{"error_kind":"string","string":"attempt to multiply with overflow"}}},"bytecode":"H4sIAAAAAAAA/9VUQY7CMAxMQtvdpdoTH4mbpE1ufIWK8hYewCN4CRcOfAkqHMmYgIRIJRgpcjpuR87ErhRXVJdV415e1gzjiCXjZIJTyAn23Qj9HkCgPtc1urV26JoBDKx0E3rvtHV968GD827deGMGb30X+tDpANYMsHHBbFB4lq9GTb2guhEqqyetlRl9KCbyIeoWzINnvnzQncIbvgAnEkfPpk19LTGO83wzoJW4b8riS8x/sS7N6oIy4xmriZoi98+tzHgXUqSHWJK6Ka8SPXbcnQ777WpNUtcmTeSi5i/GP4xzks/Ya03Ur6fR1z/iHnOyr1lOMe8o5INnxeKzdzlPuf9ELmouMNJ64znOpI6v7UkIAAA=","debug_symbols":"pZHdCoMwDIXfJde90Pkz9VXGkKpRCqUttR0M8d0Xi930YjDYzUmb0y8J6QIDdn5qhRr1DM1tgc4KKcXUSt1zJ7Si7LIyiNfWWURKwcEnynCLykGjvJQMHlz68Gg2XIXouCU3YYBqoEgFRyFxO63sQyff0SxLdzgrqzde/M5Xl8jX9V98npYn/k433gt72hhk0NDAedACGoLLoFcqxaAKWgdNEwrr1tkK3kncFz561R/2754mOvGHjNU9Dt7i1jl4NMsL","file_map":{"50":{"source":"// Circuit to verify if the amount paid in taxes is the right percentage of the total amount declared\nfn main(total_declared_value: u64, amount_paid: u64, tax_percentage: pub u64) {\n    // Calculate the minimum amount of taxes to be paid \n    // To avoid divisions the amount paid is multiplied by 100\n    let amount_to_pay: u64 = total_declared_value * tax_percentage;\n\n    assert(amount_paid * 100 >= amount_to_pay);\n}\n\n#[test]\nfn test_main_exact_min_percentage() {\n    // Test with the exact percentage paid in taxes (15%)\n    let total_declared_value = 1000000; // Total amount declared: $10,000.00\n    let amount_paid = 150000;           // Amount paid in taxes:  $1,500.00\n    let tax_percentage = 15;            // Taxes: 15%\n\n    main(total_declared_value, amount_paid, tax_percentage);\n}\n\n#[test]\nfn test_main_above_min_percentage() {\n    // Test with a greater percentage paid in taxes (20%)\n    let total_declared_value = 1000000; // Total amount declared: $10,000.00\n    let amount_paid = 200000;           // Amount paid in taxes:  $2,000.00\n    let tax_percentage = 15;            // Taxes: 15%\n\n    main(total_declared_value, amount_paid, tax_percentage);\n}\n\n#[test(should_fail)]\nfn test_main_below_min_percentage() {\n    // Test with a lower percentage paid in taxes (10%)\n    let total_declared_value = 1000000; // Total amount declared: $10,000.00\n    let amount_paid = 100000;           // Amount paid in taxes:  $1,000.00\n    let tax_percentage = 15;            // Taxes: 15%\n\n    main(total_declared_value, amount_paid, tax_percentage);\n}","path":"/home/mateus/Desktop/ZKCargoPass/ZK-CargoPass/circuits/tax_validation/src/main.nr"}},"names":["main"],"brillig_names":["directive_integer_quotient"]}